{"ast":null,"code":"import _toConsumableArray from\"F:\\\\workspace\\\\react-wordle-main\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _slicedToArray from\"F:\\\\workspace\\\\react-wordle-main\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{InformationCircleIcon,ChartBarIcon,SunIcon,MoonIcon}from'@heroicons/react/outline';import{useState,useEffect}from'react';import{Alert}from'./components/alerts/Alert';import{Grid}from'./components/grid/Grid';import{Keyboard}from'./components/keyboard/Keyboard';import{AboutModal}from'./components/modals/AboutModal';import{InfoModal}from'./components/modals/InfoModal';import{StatsModal}from'./components/modals/StatsModal';import{GAME_TITLE,WIN_MESSAGES,GAME_COPIED_MESSAGE,ABOUT_GAME_MESSAGE,NOT_ENOUGH_LETTERS_MESSAGE,WORD_NOT_FOUND_MESSAGE,CORRECT_WORD_MESSAGE}from'./constants/strings';import{MAX_WORD_LENGTH,MAX_CHALLENGES,ALERT_TIME_MS,REVEAL_TIME_MS}from'./constants/settings';import{isWordInWordList,isWinningWord,solution}from'./lib/words';import{addStatsForCompletedGame,loadStats}from'./lib/stats';import{loadGameStateFromLocalStorage,saveGameStateToLocalStorage}from'./lib/localStorage';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var prefersDarkMode=window.matchMedia('(prefers-color-scheme: dark)').matches;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),currentGuess=_useState2[0],setCurrentGuess=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isGameWon=_useState4[0],setIsGameWon=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isInfoModalOpen=_useState6[0],setIsInfoModalOpen=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isAboutModalOpen=_useState8[0],setIsAboutModalOpen=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isNotEnoughLetters=_useState10[0],setIsNotEnoughLetters=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isStatsModalOpen=_useState12[0],setIsStatsModalOpen=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isWordNotFoundAlertOpen=_useState14[0],setIsWordNotFoundAlertOpen=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isGameLost=_useState16[0],setIsGameLost=_useState16[1];var _useState17=useState(localStorage.getItem('theme')?localStorage.getItem('theme')==='dark':prefersDarkMode?true:false),_useState18=_slicedToArray(_useState17,2),isDarkMode=_useState18[0],setIsDarkMode=_useState18[1];var _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),successAlert=_useState20[0],setSuccessAlert=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),isRevealing=_useState22[0],setIsRevealing=_useState22[1];var _useState23=useState(function(){var loaded=loadGameStateFromLocalStorage();if((loaded===null||loaded===void 0?void 0:loaded.solution)!==solution){return[];}var gameWasWon=loaded.guesses.includes(solution);if(gameWasWon){setIsGameWon(true);}if(loaded.guesses.length===MAX_CHALLENGES&&!gameWasWon){setIsGameLost(true);}return loaded.guesses;}),_useState24=_slicedToArray(_useState23,2),guesses=_useState24[0],setGuesses=_useState24[1];var _useState25=useState(function(){return loadStats();}),_useState26=_slicedToArray(_useState25,2),stats=_useState26[0],setStats=_useState26[1];useEffect(function(){if(isDarkMode){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}},[isDarkMode]);var handleDarkMode=function handleDarkMode(isDark){setIsDarkMode(isDark);localStorage.setItem('theme',isDark?'dark':'light');};useEffect(function(){saveGameStateToLocalStorage({guesses:guesses,solution:solution});},[guesses]);useEffect(function(){if(isGameWon){setTimeout(function(){setSuccessAlert(WIN_MESSAGES[Math.floor(Math.random()*WIN_MESSAGES.length)]);setTimeout(function(){setSuccessAlert('');setIsStatsModalOpen(true);},ALERT_TIME_MS);},REVEAL_TIME_MS*MAX_WORD_LENGTH);}if(isGameLost){setTimeout(function(){setIsStatsModalOpen(true);},ALERT_TIME_MS);}},[isGameWon,isGameLost]);var onChar=function onChar(value){if(currentGuess.length<MAX_WORD_LENGTH&&guesses.length<MAX_CHALLENGES&&!isGameWon){setCurrentGuess(\"\".concat(currentGuess).concat(value));}};var onDelete=function onDelete(){setCurrentGuess(currentGuess.slice(0,-1));};var onEnter=function onEnter(){if(isGameWon||isGameLost){return;}if(!(currentGuess.length===MAX_WORD_LENGTH)){setIsNotEnoughLetters(true);return setTimeout(function(){setIsNotEnoughLetters(false);},ALERT_TIME_MS);}if(!isWordInWordList(currentGuess)){setIsWordNotFoundAlertOpen(true);return setTimeout(function(){setIsWordNotFoundAlertOpen(false);},ALERT_TIME_MS);}setIsRevealing(true);// turn this back off after all\n// chars have been revealed\nsetTimeout(function(){setIsRevealing(false);},REVEAL_TIME_MS*MAX_WORD_LENGTH);var winningWord=isWinningWord(currentGuess);if(currentGuess.length===MAX_WORD_LENGTH&&guesses.length<MAX_CHALLENGES&&!isGameWon){setGuesses([].concat(_toConsumableArray(guesses),[currentGuess]));setCurrentGuess('');if(winningWord){setStats(addStatsForCompletedGame(stats,guesses.length));return setIsGameWon(true);}if(guesses.length===MAX_CHALLENGES-1){setStats(addStatsForCompletedGame(stats,guesses.length+1));setIsGameLost(true);}}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-full top-0 py-3 px-3 text-center text-white bg-violet-900\",children:[\"Brought to you by \",/*#__PURE__*/_jsx(\"a\",{className:\"underline font-bold\",href:\"https://densurefit.us/?utm_source=dentordle&utm_medium=puzzle\",target:\"_blank\",rel:\"noreferrer\",children:\"DenSureFit\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pt-2 pb-8 max-w-7xl mx-auto sm:px-6 lg:px-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex w-80 mx-auto items-center mb-8 mt-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl ml-2.5 grow font-bold dark:text-white\",children:GAME_TITLE}),isDarkMode?/*#__PURE__*/_jsx(SunIcon,{className:\"h-6 w-6 mr-2 cursor-pointer dark:stroke-white\",onClick:function onClick(){return handleDarkMode(!isDarkMode);}}):/*#__PURE__*/_jsx(MoonIcon,{className:\"h-6 w-6 mr-2 cursor-pointer\",onClick:function onClick(){return handleDarkMode(!isDarkMode);}}),/*#__PURE__*/_jsx(InformationCircleIcon,{className:\"h-6 w-6 mr-2 cursor-pointer dark:stroke-white\",onClick:function onClick(){return setIsInfoModalOpen(true);}}),/*#__PURE__*/_jsx(ChartBarIcon,{className:\"h-6 w-6 mr-3 cursor-pointer dark:stroke-white\",onClick:function onClick(){return setIsStatsModalOpen(true);}})]}),/*#__PURE__*/_jsx(Grid,{guesses:guesses,currentGuess:currentGuess,isRevealing:isRevealing}),/*#__PURE__*/_jsx(Keyboard,{onChar:onChar,onDelete:onDelete,onEnter:onEnter,guesses:guesses,isRevealing:isRevealing}),/*#__PURE__*/_jsx(InfoModal,{isOpen:isInfoModalOpen,handleClose:function handleClose(){return setIsInfoModalOpen(false);}}),/*#__PURE__*/_jsx(StatsModal,{isOpen:isStatsModalOpen,handleClose:function handleClose(){return setIsStatsModalOpen(false);},guesses:guesses,gameStats:stats,isGameLost:isGameLost,isGameWon:isGameWon,handleShare:function handleShare(){setSuccessAlert(GAME_COPIED_MESSAGE);return setTimeout(function(){return setSuccessAlert('');},ALERT_TIME_MS);}}),/*#__PURE__*/_jsx(AboutModal,{isOpen:isAboutModalOpen,handleClose:function handleClose(){return setIsAboutModalOpen(false);}}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"mx-auto mt-8 flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 select-none\",onClick:function onClick(){return setIsAboutModalOpen(true);},children:ABOUT_GAME_MESSAGE}),/*#__PURE__*/_jsx(Alert,{message:NOT_ENOUGH_LETTERS_MESSAGE,isOpen:isNotEnoughLetters}),/*#__PURE__*/_jsx(Alert,{message:WORD_NOT_FOUND_MESSAGE,isOpen:isWordNotFoundAlertOpen}),/*#__PURE__*/_jsx(Alert,{message:CORRECT_WORD_MESSAGE(solution),isOpen:isGameLost}),/*#__PURE__*/_jsx(Alert,{message:successAlert,isOpen:successAlert!=='',variant:\"success\"})]})]});}export default App;","map":{"version":3,"sources":["F:/workspace/react-wordle-main/src/App.tsx"],"names":["InformationCircleIcon","ChartBarIcon","SunIcon","MoonIcon","useState","useEffect","Alert","Grid","Keyboard","AboutModal","InfoModal","StatsModal","GAME_TITLE","WIN_MESSAGES","GAME_COPIED_MESSAGE","ABOUT_GAME_MESSAGE","NOT_ENOUGH_LETTERS_MESSAGE","WORD_NOT_FOUND_MESSAGE","CORRECT_WORD_MESSAGE","MAX_WORD_LENGTH","MAX_CHALLENGES","ALERT_TIME_MS","REVEAL_TIME_MS","isWordInWordList","isWinningWord","solution","addStatsForCompletedGame","loadStats","loadGameStateFromLocalStorage","saveGameStateToLocalStorage","App","prefersDarkMode","window","matchMedia","matches","currentGuess","setCurrentGuess","isGameWon","setIsGameWon","isInfoModalOpen","setIsInfoModalOpen","isAboutModalOpen","setIsAboutModalOpen","isNotEnoughLetters","setIsNotEnoughLetters","isStatsModalOpen","setIsStatsModalOpen","isWordNotFoundAlertOpen","setIsWordNotFoundAlertOpen","isGameLost","setIsGameLost","localStorage","getItem","isDarkMode","setIsDarkMode","successAlert","setSuccessAlert","isRevealing","setIsRevealing","loaded","gameWasWon","guesses","includes","length","setGuesses","stats","setStats","document","documentElement","classList","add","remove","handleDarkMode","isDark","setItem","setTimeout","Math","floor","random","onChar","value","onDelete","slice","onEnter","winningWord"],"mappings":"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","sourcesContent":["import {\n  InformationCircleIcon,\n  ChartBarIcon,\n  SunIcon,\n  MoonIcon,\n} from '@heroicons/react/outline'\nimport { useState, useEffect } from 'react'\nimport { Alert } from './components/alerts/Alert'\nimport { Grid } from './components/grid/Grid'\nimport { Keyboard } from './components/keyboard/Keyboard'\nimport { AboutModal } from './components/modals/AboutModal'\nimport { InfoModal } from './components/modals/InfoModal'\nimport { StatsModal } from './components/modals/StatsModal'\nimport {\n  GAME_TITLE,\n  WIN_MESSAGES,\n  GAME_COPIED_MESSAGE,\n  ABOUT_GAME_MESSAGE,\n  NOT_ENOUGH_LETTERS_MESSAGE,\n  WORD_NOT_FOUND_MESSAGE,\n  CORRECT_WORD_MESSAGE,\n} from './constants/strings'\nimport {\n  MAX_WORD_LENGTH,\n  MAX_CHALLENGES,\n  ALERT_TIME_MS,\n  REVEAL_TIME_MS,\n} from './constants/settings'\nimport { isWordInWordList, isWinningWord, solution } from './lib/words'\nimport { addStatsForCompletedGame, loadStats } from './lib/stats'\nimport {\n  loadGameStateFromLocalStorage,\n  saveGameStateToLocalStorage,\n} from './lib/localStorage'\n\nimport './App.css'\n\nfunction App() {\n  const prefersDarkMode = window.matchMedia(\n    '(prefers-color-scheme: dark)'\n  ).matches\n\n  const [currentGuess, setCurrentGuess] = useState('')\n  const [isGameWon, setIsGameWon] = useState(false)\n  const [isInfoModalOpen, setIsInfoModalOpen] = useState(false)\n  const [isAboutModalOpen, setIsAboutModalOpen] = useState(false)\n  const [isNotEnoughLetters, setIsNotEnoughLetters] = useState(false)\n  const [isStatsModalOpen, setIsStatsModalOpen] = useState(false)\n  const [isWordNotFoundAlertOpen, setIsWordNotFoundAlertOpen] = useState(false)\n  const [isGameLost, setIsGameLost] = useState(false)\n  const [isDarkMode, setIsDarkMode] = useState(\n    localStorage.getItem('theme')\n      ? localStorage.getItem('theme') === 'dark'\n      : prefersDarkMode\n      ? true\n      : false\n  )\n  const [successAlert, setSuccessAlert] = useState('')\n  const [isRevealing, setIsRevealing] = useState(false)\n  const [guesses, setGuesses] = useState<string[]>(() => {\n    const loaded = loadGameStateFromLocalStorage()\n    if (loaded?.solution !== solution) {\n      return []\n    }\n    const gameWasWon = loaded.guesses.includes(solution)\n    if (gameWasWon) {\n      setIsGameWon(true)\n    }\n    if (loaded.guesses.length === MAX_CHALLENGES && !gameWasWon) {\n      setIsGameLost(true)\n    }\n    return loaded.guesses\n  })\n\n  const [stats, setStats] = useState(() => loadStats())\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark')\n    } else {\n      document.documentElement.classList.remove('dark')\n    }\n  }, [isDarkMode])\n\n  const handleDarkMode = (isDark: boolean) => {\n    setIsDarkMode(isDark)\n    localStorage.setItem('theme', isDark ? 'dark' : 'light')\n  }\n\n  useEffect(() => {\n    saveGameStateToLocalStorage({ guesses, solution })\n  }, [guesses])\n\n  useEffect(() => {\n    if (isGameWon) {\n      setTimeout(() => {\n        setSuccessAlert(\n          WIN_MESSAGES[Math.floor(Math.random() * WIN_MESSAGES.length)]\n        )\n\n        setTimeout(() => {\n          setSuccessAlert('')\n          setIsStatsModalOpen(true)\n        }, ALERT_TIME_MS)\n      }, REVEAL_TIME_MS * MAX_WORD_LENGTH)\n    }\n    if (isGameLost) {\n      setTimeout(() => {\n        setIsStatsModalOpen(true)\n      }, ALERT_TIME_MS)\n    }\n  }, [isGameWon, isGameLost])\n\n  const onChar = (value: string) => {\n    if (\n      currentGuess.length < MAX_WORD_LENGTH &&\n      guesses.length < MAX_CHALLENGES &&\n      !isGameWon\n    ) {\n      setCurrentGuess(`${currentGuess}${value}`)\n    }\n  }\n\n  const onDelete = () => {\n    setCurrentGuess(currentGuess.slice(0, -1))\n  }\n\n  const onEnter = () => {\n    if (isGameWon || isGameLost) {\n      return\n    }\n    if (!(currentGuess.length === MAX_WORD_LENGTH)) {\n      setIsNotEnoughLetters(true)\n      return setTimeout(() => {\n        setIsNotEnoughLetters(false)\n      }, ALERT_TIME_MS)\n    }\n\n    if (!isWordInWordList(currentGuess)) {\n      setIsWordNotFoundAlertOpen(true)\n      return setTimeout(() => {\n        setIsWordNotFoundAlertOpen(false)\n      }, ALERT_TIME_MS)\n    }\n\n    setIsRevealing(true)\n    // turn this back off after all\n    // chars have been revealed\n    setTimeout(() => {\n      setIsRevealing(false)\n    }, REVEAL_TIME_MS * MAX_WORD_LENGTH)\n\n    const winningWord = isWinningWord(currentGuess)\n\n    if (\n      currentGuess.length === MAX_WORD_LENGTH &&\n      guesses.length < MAX_CHALLENGES &&\n      !isGameWon\n    ) {\n      setGuesses([...guesses, currentGuess])\n      setCurrentGuess('')\n\n      if (winningWord) {\n        setStats(addStatsForCompletedGame(stats, guesses.length))\n        return setIsGameWon(true)\n      }\n\n      if (guesses.length === MAX_CHALLENGES - 1) {\n        setStats(addStatsForCompletedGame(stats, guesses.length + 1))\n        setIsGameLost(true)\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"w-full top-0 py-3 px-3 text-center text-white bg-violet-900\">\n        Brought to you by <a className=\"underline font-bold\" href=\"https://densurefit.us/?utm_source=dentordle&utm_medium=puzzle\" target=\"_blank\" rel=\"noreferrer\">DenSureFit</a>\n      </div>\n      <div className=\"pt-2 pb-8 max-w-7xl mx-auto sm:px-6 lg:px-8\">\n        <div className=\"flex w-80 mx-auto items-center mb-8 mt-4\">\n          <h1 className=\"text-xl ml-2.5 grow font-bold dark:text-white\">\n            {GAME_TITLE}\n          </h1>\n          {isDarkMode ? (\n            <SunIcon\n              className=\"h-6 w-6 mr-2 cursor-pointer dark:stroke-white\"\n              onClick={() => handleDarkMode(!isDarkMode)}\n            />\n          ) : (\n            <MoonIcon\n              className=\"h-6 w-6 mr-2 cursor-pointer\"\n              onClick={() => handleDarkMode(!isDarkMode)}\n            />\n          )}\n          <InformationCircleIcon\n            className=\"h-6 w-6 mr-2 cursor-pointer dark:stroke-white\"\n            onClick={() => setIsInfoModalOpen(true)}\n          />\n          <ChartBarIcon\n            className=\"h-6 w-6 mr-3 cursor-pointer dark:stroke-white\"\n            onClick={() => setIsStatsModalOpen(true)}\n          />\n        </div>\n        <Grid\n          guesses={guesses}\n          currentGuess={currentGuess}\n          isRevealing={isRevealing}\n        />\n        <Keyboard\n          onChar={onChar}\n          onDelete={onDelete}\n          onEnter={onEnter}\n          guesses={guesses}\n          isRevealing={isRevealing}\n        />\n        <InfoModal\n          isOpen={isInfoModalOpen}\n          handleClose={() => setIsInfoModalOpen(false)}\n        />\n        <StatsModal\n          isOpen={isStatsModalOpen}\n          handleClose={() => setIsStatsModalOpen(false)}\n          guesses={guesses}\n          gameStats={stats}\n          isGameLost={isGameLost}\n          isGameWon={isGameWon}\n          handleShare={() => {\n            setSuccessAlert(GAME_COPIED_MESSAGE)\n            return setTimeout(() => setSuccessAlert(''), ALERT_TIME_MS)\n          }}\n        />\n        <AboutModal\n          isOpen={isAboutModalOpen}\n          handleClose={() => setIsAboutModalOpen(false)}\n        />\n\n        <button\n          type=\"button\"\n          className=\"mx-auto mt-8 flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 select-none\"\n          onClick={() => setIsAboutModalOpen(true)}\n        >\n          {ABOUT_GAME_MESSAGE}\n        </button>\n\n        <Alert message={NOT_ENOUGH_LETTERS_MESSAGE} isOpen={isNotEnoughLetters} />\n        <Alert\n          message={WORD_NOT_FOUND_MESSAGE}\n          isOpen={isWordNotFoundAlertOpen}\n        />\n        <Alert message={CORRECT_WORD_MESSAGE(solution)} isOpen={isGameLost} />\n        <Alert\n          message={successAlert}\n          isOpen={successAlert !== ''}\n          variant=\"success\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}